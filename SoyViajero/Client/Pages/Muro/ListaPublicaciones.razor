@page "/Muro"
@inject IHttpService http

<h3>Muro</h3>

<a class= "btn btn-primary" href="Muro/CrearPublicacion">Nueva publiación</a>




 <div class="form-group">
            <label>CuentasId</label>
            <div>
                <InputText class="form-control" @bind-Value="@publicacion.CuentasId"/>
                <ValidationMessage For="@(() => publicaciones.CuentasId)"/>

            </div>
    </div>

    <div class="form-group">
            <label>CuentasId</label>
            <div>
                <InputText class="form-control" @bind-Value="@publicacion.texto"/>
                <ValidationMessage For="@(() => publicacion.texto)"/>

            </div>
    </div>
   
   
@if (Publicaciones = null)
    {
        <tr> Cargando publicaciones....</tr>
    }
 @else if (Publicaciones.Count ==0)
 {
     <tr> No exiten publicaciones para mostrar </tr>
 }

 @else 
 {
 @foreach (var item in publicaciones)
    {
        <div class="form-group">
            <label>CuentasId</label>
            <div>
                <InputText class="form-control" @bind-Value="@publicacion.CuentasId"/>
                <ValidationMessage For="@(() => publicaciones.CuentasId)"/>

            </div>
    </div>

    <div class="form-group">
            <label>CuentasId</label>
            <div>
                <InputText class="form-control" @bind-Value="@publicacion.texto"/>
                <ValidationMessage For="@(() => publicacion.texto)"/>

            </div>
    </div>

         <tr>
               <td>
                <a class="btn btn-primary
                href="/Muro/Editar">Editar/@item.Id</a>
             </td>

             <td>
                <button class="btn btn-warning"
                @onclick="()=>Eliminar(item)">
                Borrar
                </button>
             </td>
           </tr>
    }
 }


<Confirmacion @ref="confirmacion"
              verCancelar="true"
              verOk="true"
              textOk="Ok"
              Titulo="Borrar publicacion"
              onCancel="Cancelar"
              onConfirm="Borrar">
              <div>
                  Está por borrar la publicacion @PublicacionBorrar.Texto ,
                  <br />
                  ¿Está seguro que desea continuar?
              </div>
</Confirmacion>


@code {
    List<Publicacion> publicaciones;
    Publicacion PublicacionBorrar;

    Confirmacion confirmacion; 

    protected override async Task OnInitializedAdsync()
    {
        base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer() 
    {
        var respuesta = await http.Get<IList<Publicacion>>("api/Publicacion");
        if (!respuesta.Error)
        {
            publicaciones = respuesta.Respuesta; 
        }
    }

    private void Eliminar (Publicacion publicacionBorar)
    {
        PublicacionBorar = publicacionBorar(); 
        confirmacion.Ver();
    }

    private void Cancerlar()
    {
        confirmacion.Ocultar();
        publicacionBorar= null; 
    }

    private async Task Borrar()
    {
        var respuesta = http.Delete($"api/Publicacion/{publicacionBorar.Id}")
        if (respuesta.Error)
        {
            var body = await respuesta.GetBody(); 
        }
        Cancelar();
        await Lerr(); 
    }

}

