@page "/"
@inject IHttpService http

<div class="content">
    <BotonPublicacion></BotonPublicacion>
    <table>

        @if (publicaciones == null)
        {
            <tr>Cargando...</tr>
        }
        else if(publicaciones.Count == 0)
        {
            <tr>Todavía no hay publicaciones</tr>
        }
        else
        {
            @foreach (var item in publicaciones)
            {
@*                <tr>
                    <td>@item.Texto</td>
                    <td>@item.FechaCreacion</td>
                    <td>
                        <a class="btn btn-primary"
                           href="Muro/Comentarios/@item.ID" style="width:40%; margin-top:1rem;">
                            Ver comentarios
                        </a>
                    </td>
                </tr>*@
                <Publicac publicacion="@item"></Publicac>
            }
        }
    </table>
</div>


@code {
    List<Publicacion> publicaciones = new List<Publicacion>();
    //Confirmacion confirmacion;
    Publicacion PublicacionBorrar = new Publicacion();


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var respuesta = await http.Get<List<Publicacion>>("/PublicacionesMuro");
        if(!respuesta.Error)
        {
            publicaciones = respuesta.Respuesta;
        }
    }

    //private void Eliminar(Publicacion publicacionBorrar)
    //{
    //    PublicacionBorrar = publicacionBorrar;
    //    confirmacion.Ver();
    //}

    //private void Cancelar()
    //{
    //    confirmacion.Ocultar();
    //    PublicacionBorrar = null;
    //}

    //private async Task Borrar()
    //{
    //    var respuesta = await http.Delete($"api/Publicaciones/{PublicacionBorrar.ID}");
    //    if(respuesta.Error)
    //    {
    //        var body = "Error";
    //    }
    //    Cancelar();
    //    await Leer();
    //}
}
