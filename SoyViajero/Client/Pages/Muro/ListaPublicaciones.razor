@page "/Muro"
@inject IHttpService http

<h3>Muro</h3>

<a class="btn btn-primary" href="Muro/CrearPublicacion">
    <span class="oi oi-plus" aria-hidden="true"></span>
    Nueva publicacion
    </a>

<table>

    @if (publicaciones == null)
    {
        <tr>Cargando...</tr>
    }
    else if(publicaciones.Count == 0)
    {
        <tr>Todavía no hay publicaciones</tr>
    }
    else
    {
        @foreach (var item in publicaciones)
        {
            <tr>
                <td>@item.Texto</td>
                <td>@item.FechaCreacion</td>
                <td>
                    <button class="btn btn-danger"
                            @onclick="()=>Eliminar(item)">
                        Borrar
                    </button>
                </td>
            </tr>
        }
    }
</table>

@*<Confirmacion @ref="confirmacion"
              verCancelar="true"
              verOk="true"
              textOk="Ok"
              Titulo="Borrar especialidad"
              onCancel="Cancelar"
              onConfirm="Borrar"
>
              <div>
                  Está por borrar la publicación de ID @PublicacionBorrar.ID
                  <br/>
                  ¿Está seguro que desea continuar?
              </div>
</Confirmacion>*@


@code {
    List<Publicacion> publicaciones = new List<Publicacion>();
    Confirmacion confirmacion;
    Publicacion PublicacionBorrar = new Publicacion();


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var respuesta = await http.Get<List<Publicacion>>("/PublicacionesMuro");
        if(!respuesta.Error)
        {
            publicaciones = respuesta.Respuesta;
        }
    }

    private void Eliminar(Publicacion publicacionBorrar)
    {
        PublicacionBorrar = publicacionBorrar;
        confirmacion.Ver();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        PublicacionBorrar = null;
    }

    //private async Task Borrar()
    //{
    //    var respuesta = await http.Delete($"api/Publicaciones/{PublicacionBorrar.ID}");
    //    if(respuesta.Error)
    //    {
    //        var body = "Error";
    //    }
    //    Cancelar();
    //    await Leer();
    //}
}
