@page "/Cuentas"
@inject IHttpService http
@inject NavigationManager navigationManager


<h3>Lista De Cuentas</h3>
<a class= "btn btn-primary" href="Cuentas/CrearHostel">Crear nueva cuenta de hostel</a>
<a class= "btn btn-primary" href="Cuentas/CrearViajero">Crear nueva cuenta de viajero</a>

<table class="table">
    <thead>
        <tr>
            <th scope="col">Nombre</th>
            <th scope="col">Tipo de cuenta</th> 
            <th scope="col"> </th>
        </tr>
    </thead>
    <tbody>
        @if (cuentasH == null && cuentaV ==null)
        {
            <tr>Cargando</tr>
        }
        else if (cuentasH.Count == 0 && cuentaV == null)
        {
            <tr>No hay datos disponibles</tr>
        }
        else
        {
            @if (cuentaV!=null)
            {
                <tr>
                    <td>@cuentaV.Nombre @cuentaV.Apellido</td>
                    <td>Viajero</td>
                    <td>@cuentaV.Id</td>
                    <button class ="btn btn-dark" @onclick="()=>logCuenta(cuentaV.Id)">Ingresar</button>
                    <button class="btn btn-warning"> Modificar</button>
                    <button class="btn btn-danger" @onclick="()=>Eliminar(cuentaV.Id)">Eliminar</button>
                </tr>
            }
           

            @foreach (var item in cuentasH)
            {
                <tr>
                    <td>@item.Nombre</td>
                    <td>Hostel</td>
                    <td>@item.Id</td>
                    <button class ="btn btn-secondary" @onclick="()=>logCuenta(item.Id)">Ingresar</button>
                    <button class="btn btn-warning"> Modificar</button>
                    <button class="btn btn-danger" @onclick="()=>Eliminar(item.Id)">Eliminar</button>
                </tr>
            }
        }
    </tbody>
    
    </table>
    <Confirmacion  @ref ="confirmacion"
                verOk = "true"
                verCancelar = "false"
                textOk = "Aceptar"
                onCancel = "Cerrar"
                onConfirm = "Delete"
                Titulo = "¿Eliminar cuenta?">
                <div>
                    ¿Desea eliminar la cuenta "@CuentaElim"?
                </div>

</Confirmacion>


@code {
    List<CuentaHostel> cuentasH = new List<CuentaHostel>();
    CuentaViajero  cuentaV = new CuentaViajero();
    Usuario usuario = new Usuario();
    Confirmacion confirmacion;
    private string CuentaElim;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await readCuentas();

    }
    private async Task readCuentas()
    {
        var respuesta = await http.Get<Usuario>("api/Cuentas");
        if (!respuesta.Error)
        {
            if (respuesta.Respuesta.cuentasHostel.Count>0)
            {
                cuentasH = respuesta.Respuesta.cuentasHostel;
            }
            cuentaV = respuesta.Respuesta.cuentaViajero; 

        }
    }
    private async Task logCuenta(string Id)
    {
        Console.WriteLine($"id = {Id}");
        var respuesta = await http.Get<int>($"api/Login/{Id}");
        if (!respuesta.Error)
        {
            navigationManager.NavigateTo("Cuentas/CrearHostel");
        }
        else
        {
            Console.WriteLine("respuesta "+respuesta.Respuesta.ToString());
            navigationManager.NavigateTo("/Muro");
        }

    }
    private async Task Delete()
    {
        if (CuentaElim.Contains("v"))
        {
            var resp = await http.Delete($"/EliminarViajero");
            if(resp.Error)
            {
                var body = "Error";
            }
            Cerrar();
        }
        else if(CuentaElim.Contains("h"))
        {
            var resp = await http.Delete($"/EliminarHostel/{CuentaElim}");
            if(resp.Error)
            {
                var body = "Error";
            }
            Cerrar();
        }
    }
    private void Eliminar(string idCuenta)
    {
        CuentaElim = idCuenta;
        confirmacion.Ver();
    }
    private void Cerrar()
    {
        confirmacion.Ocultar();
        CuentaElim = string.Empty;
    }




}

