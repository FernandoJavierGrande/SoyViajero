@inject IHttpService http
@page "/Perfil/{IdCuenta}"
<div class="content">
    @if (banderaCuenta)
    {
        <div class="cardPerfil">
            <div class="foto" style="background-image: url(@cuentaHostelLogueada.FotoPerfil)"></div>
            <div class="cardDatos">
                <span>Somos <span class="nombreCta">@cuentaHostelLogueada.Nombre</span></span>
                <div class="datosHostel">
                    <p class="prf">
                        Estamos en <span class="datoImp">@cuentaHostelLogueada.Ciudad, @cuentaHostelLogueada.Provincia, @cuentaHostelLogueada.Pais</span>
                        <br/>
                        Nos podes contactar por nuestro mail: <span class="datoImp">@cuentaHostelLogueada.Mail</span>
                        <br/>
                        O llamarnos al: <span class="datoImp">@cuentaHostelLogueada.Telefono</span>
                        <br/>
                        <span class="sobreNtros">Sobre nosotros</span>
                        <br/>
                        @cuentaHostelLogueada.Descripcion
                    </p>
                </div>
            </div>
        </div>
    }
    
    else if (!banderaCuenta)
    {
         <div class="cardPerfil">
            <div class="foto" style="background-image: url(@cuentaViajeroLogueada.FotoPerfil)"></div>
            <div class="cardDatos">
                <span>Soy <span class="nombreCta">@cuentaViajeroLogueada.Nombre @cuentaViajeroLogueada.Apellido</span></span>
                <div class="datosHostel">
                    <p class="prf">
                        Tengo <span class="datoImp"> @cuentaViajeroLogueada.Edad años</span>
                        <br/>
                        Soy de <span class="datoImp">@cuentaViajeroLogueada.Ciudad, @cuentaViajeroLogueada.Provincia, @cuentaViajeroLogueada.Pais</span>
                        <br/>
                        <span class="sobreNtros">Sobre mi</span>
                        <br/>
                        @cuentaViajeroLogueada.Descripcion
                    </p>
                </div>
            </div>
        </div>
    }
    else if(!logueado)
    {
        <h3 style="text-align: center;">No hay ninguna cuenta logueada</h3>
    }
    @if (logueado && publicaciones.Count<1)
    {
        <h3 style="text-align: center;">No hay ninguna publicación</h3>
        <BotonPublicacion></BotonPublicacion>    
    }

    
    @if (publicaciones != null)
    {
        @foreach(var item in publicaciones)
        {
            <Publicac publicacion="@item"></Publicac>
        }
    }
</div>


@code {
    private CuentaHostel cuentaHostelLogueada;
    private CuentaViajero cuentaViajeroLogueada = new CuentaViajero();
    private bool logueado = false, banderaCuenta;

    [Parameter]
    public string IdCuenta { get; set; } = string.Empty; 

    private List<Publicacion> publicaciones = new List<Publicacion>();

    protected override async Task OnInitializedAsync()
    {
        await cuenta();
        await base.OnInitializedAsync();
        await readPublicaciones();
        await readCuenta();
    }
    private async Task readCuenta()
    {
        if (IdCuenta.Contains("h"))
        {
            var respuesta = await http.Get<CuentaHostel>($"/BuscarHostel/{IdCuenta}");
            if (!respuesta.Error)
            {
                cuentaHostelLogueada = respuesta.Respuesta;
                banderaCuenta = true;
            }                
        } 
        else if (IdCuenta.Contains("v"))
        {
            var respuesta = await http.Get<CuentaViajero>($"/BuscarViajero/{IdCuenta}");
            if (!respuesta.Error)
            {
                cuentaViajeroLogueada = respuesta.Respuesta;
                banderaCuenta = false;
            }                

        }  

    }    
    private async Task readPublicaciones()
    {
        if (cuentaHostelLogueada != null)
        {
            var respuesta = await http.Get<List<Publicacion>>($"/Publicaciones/{cuentaHostelLogueada.Id}");
            if (!respuesta.Error)
            {
                publicaciones = respuesta.Respuesta;

            }           
        }
        else if(cuentaViajeroLogueada != null)
        {
            var respuesta = await http.Get<List<Publicacion>>($"/Publicaciones/{cuentaViajeroLogueada.Id}");
            if (!respuesta.Error)
            {
                publicaciones = respuesta.Respuesta;

            }   
        }
         //var respuesta = await http.Get<List<Publicacion>>("/Publicaciones");
         //   if (!respuesta.Error)
         //   {
         //       publicaciones = respuesta.Respuesta;

         //   }
    }
    private async Task cuenta()
    {
        var res = await http.Get<Usuario>("api/Login/Consulta");
        if (!res.Error && !res.Respuesta.NombreUser.Equals("null"))
        {
            logueado = true;
        }
    }
}
