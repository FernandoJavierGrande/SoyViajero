@page "/Usuario/Crear"
@inject IHttpService http
@inject NavigationManager navigationManager

<div class="content">
    <FormUsuario usuario = "usuario" onCancel="Cancelar" onValidSubmit="Buscar"/>
</div>


<Confirmacion
                @ref ="confirmacion"
                verOk="true"
                verCancelar="false"
                textOk="Aceptar"
                onCancel="Cancelar"
                onConfirm="Cerrar"
                Titulo="Nombre no disponible">

                <div>
                    El nombre de usuario: '@usuario.NombreUser' no se encuentra disponible.
                </div>
</Confirmacion>


@code {
    private Usuario usuario = new Usuario();
    Confirmacion confirmacion;

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Usuario>("/Registro", usuario);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/Cuentas"); 
    }

    public async Task Buscar()
    {
        var resp = await http.Get<bool>($"api/Login/Buscar/{usuario.NombreUser}");
        if (!resp.Error)
        {
            if (!resp.Respuesta)
            {

                confirmacion.Ver();
            }
            else
            {  
                await Grabar();
            }

        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/");

    }
    private void Cerrar()
    {
        confirmacion.Ocultar();
    }
}