<EditForm Model="usuario" OnValidSubmit="onValidSubmit">

    <DataAnnotationsValidator/>
    <div class="form-group">
            <label>Nombre</label>
            <div>
                <InputText class="form-control" @bind-Value="usuario.NombreUser"/>
                <ValidationMessage For="@(() => usuario.NombreUser)"/>

            </div>
    </div>

    <div class="form-group">
            <label>Mail</label>
            <div>
                <InputText class="form-control" @bind-Value="@usuario.Mail"/>
                <ValidationMessage For="@(() => usuario.Mail)"/>

            </div>
    </div>

        <div class="form-group">
            <label>Contraseña</label>
            <div>
                <InputText class="form-control" @bind-Value="@usuario.Pass"/>
                <ValidationMessage For="@(() => usuario.Pass)"/>

            </div>
    </div>


    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick="onCancel">Cancelar</button>
</EditForm>

@code {
    [Parameter] public Usuario usuario { get; set; }
    [Parameter] public EventCallback onValidSubmit { get; set; }
    [Parameter] public EventCallback onCancel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        usuario.Id = 0;
        usuario.cuentasHostel = null;
        usuario.cuentaViajero = null;
        usuario.fechaCreacion = DateTime.Today.Date;

    }
}

